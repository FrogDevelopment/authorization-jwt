plugins {
    id 'jacoco'
    id 'java-library'
    id 'maven-publish'
    id 'org.sonarqube' version '3.3'
    id 'io.freefair.lombok' version '6.2.0'
    id 'fr.brouillard.oss.gradle.jgitver' version '0.9.1'
    id 'org.springframework.boot' version '2.5.4'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
}

group = 'com.frog-development'

sourceCompatibility = JavaVersion.VERSION_15
targetCompatibility = JavaVersion.VERSION_15

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom 'org.springframework.cloud:spring-cloud-dependencies:2020.0.3'
    }
}

dependencies {
    def jwtVersion = '0.9.1'

    api "io.jsonwebtoken:jjwt:$jwtVersion"

    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-actuator-autoconfigure'
    implementation 'ch.qos.logback:logback-classic:1.2.5'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'

    compileOnly 'org.jetbrains:annotations:22.0.0'
    compileOnly 'org.springframework.security:spring-security-test'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.junit.platform:junit-platform-runner'
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jgitver {
    strategy = 'PATTERN'
    versionPattern = '${v}-SNAPSHOT'
    tagVersionPattern = '${v}'
}

test {
    reports.html.enabled = false

    useJUnitPlatform {
        includeTags 'unitTest'
        excludeTags 'integrationTest'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/test.xml")
        csv.enabled false
        html.enabled false
    }
}

sonarqube {
    properties {
        property 'sonar.coverage.jacoco.xmlReportPaths', "${buildDir}/reports/jacoco/test.xml"
        property 'sonar.projectKey', 'FrogDevelopment_authorization-jwt-module'
        property 'sonar.organization', 'frogdevelopment'
        property 'sonar.host.url', 'https://sonarcloud.io'
    }
}

project.tasks['sonarqube'].dependsOn 'jacocoTestReport'

jar {
    enabled true
}

java {
    withSourcesJar()
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            pom {
                name = 'Authorisation JWT'
                description = 'Handle Spring Security with JWT'
//                url = 'http://www.frogdevelopment.com/library'
                licenses {
                    license {
                        name = 'The Apache License, Version 2.0'
                        url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id = 'legall.benoit'
                        name = 'Beno√Æt Le Gall'
                        email = 'legall.benoit@gmail.com'
                    }
                }
            }
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/frogdevelopment/authorization-jwt-module")
            credentials {
                username = System.getenv("USERNAME")
                password = System.getenv("GITHUB_TOKEN")
            }
        }
    }
}

tasks.withType(AbstractPublishToMaven) {
    doFirst {
        println("Publishing ${publication.groupId}:${publication.artifactId}:${publication.version}")
    }
}

wrapper {
    gradleVersion = '7.2'
    distributionType = Wrapper.DistributionType.ALL
}
