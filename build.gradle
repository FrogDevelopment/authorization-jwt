plugins {
    id 'java-library'
    id 'maven-publish'
    id 'io.freefair.lombok' version '3.2.0'
}

repositories {
    mavenLocal()
    maven {
        url = 'http://nexus.frog-development.com/repository/maven-public/'
    }
}

dependencies {
    implementation 'io.jsonwebtoken:jjwt:0.9.1'

    testImplementation 'org.assertj:assertj-core:3.12.1'
    testImplementation 'org.springframework.security:spring-security-test:5.1.4.RELEASE'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.4.0'
    testImplementation 'org.junit.platform:junit-platform-runner:1.4.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:2.25.0'
    testImplementation 'javax.xml.bind:jaxb-api:2.3.0'

    api 'org.springframework.boot:spring-boot:2.1.3.RELEASE'
    api 'org.springframework.security:spring-security-config:5.1.4.RELEASE'
    api 'org.springframework.security:spring-security-web:5.1.4.RELEASE'
    api 'org.springframework.boot:spring-boot-actuator-autoconfigure:2.1.3.RELEASE'

    api 'org.jetbrains:annotations:17.0.0'
    api 'ch.qos.logback:logback-classic:1.2.3'
    api 'javax.servlet:javax.servlet-api:4.0.0'
}

group = 'fr.frogdevelopment.module'
version = '0.0.1-SNAPSHOT'
description = 'authorization-jwt-module'
sourceCompatibility = JavaVersion.VERSION_11

publishing {
    publications {
        maven(MavenPublication) {
            from(components.java)
        }
    }

    task sourcesJar(type: Jar) {
        archiveClassifier = 'sources'
        from sourceSets.main.allJava
    }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}
