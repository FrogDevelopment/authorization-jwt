plugins {
    id 'jacoco'
    id 'java-library'
    id 'maven-publish'
    id 'org.sonarqube' version '2.8'
    id 'io.freefair.lombok' version '4.1.6'
    id 'com.jfrog.artifactory' version '4.9.7'
    id 'fr.brouillard.oss.gradle.jgitver' version '0.9.1'
}

group = 'fr.frogdevelopment.module'
description = 'authorization-jwt-module'

sourceCompatibility = JavaVersion.VERSION_11
targetCompatibility = JavaVersion.VERSION_11

repositories {
    mavenLocal()
    maven {
        url = "$repoUrl/libs-public"
    }
}

dependencies {
    def jwtVersion = '0.9.1'
    def springBootVersion = '2.2.0.RELEASE'
    def springSecurityVersion = '5.1.5.RELEASE'
    def junitVersion = '5.5.2'

    api "io.jsonwebtoken:jjwt:$jwtVersion"

    implementation "org.springframework.boot:spring-boot:$springBootVersion"
    implementation "org.springframework.security:spring-security-config:$springSecurityVersion"
    implementation "org.springframework.security:spring-security-web:$springSecurityVersion"
    implementation "org.springframework.boot:spring-boot-actuator-autoconfigure:$springBootVersion"
    implementation 'ch.qos.logback:logback-classic:1.2.3'
    implementation 'javax.servlet:javax.servlet-api:4.0.0'
    implementation 'javax.xml.bind:jaxb-api:2.3.0'

    compileOnly 'org.jetbrains:annotations:18.0.0'

    testImplementation 'org.assertj:assertj-core:3.14.0'
    testImplementation "org.springframework.security:spring-security-test:$springSecurityVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$junitVersion"
    testImplementation 'org.junit.platform:junit-platform-runner:1.5.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:3.2.0'

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

jgitver {
    mavenLike true
}

test {
    reports.html.enabled = false

    useJUnitPlatform {
        includeTags 'unitTest'
        excludeTags 'integrationTest'
    }
}

jacocoTestReport {
    reports {
        xml.enabled true
        xml.destination file("${buildDir}/reports/jacoco/test.xml")
        csv.enabled false
        html.enabled false
    }
}

sonarqube {
    properties {
        property "sonar.coverage.jacoco.xmlReportPaths", "${buildDir}/reports/jacoco/test.xml"
    }
}

project.tasks["sonarqube"].dependsOn "jacocoTestReport"

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    archiveClassifier = 'sources'
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java

            artifact sourcesJar
        }
    }
}

artifactoryPublish {
    afterEvaluate {
        clientConfig.publisher.repoKey = version?.endsWith('SNAPSHOT') ? 'libs-snapshot-local' : 'libs-release-local'
    }
    clientConfig.publisher.contextUrl = repoUrl
    clientConfig.publisher.username = repoUsername
    clientConfig.publisher.password = repoPassword
    clientConfig.setIncludeEnvVars(true)

    publications('maven')
}
